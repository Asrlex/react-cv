import { ProjectsEnum, TechnologiesMaster as TM } from "@/entities/components.enum";
import { ProjectInformation } from "./portfolio.translation";

const portfolioDe: ProjectInformation[] = [
  {
    id: ProjectsEnum.APH_CONTROL_TOWER,
    name: 'AirPharm Control Tower',
    type: 'API REST',
    description: 'API REST global para gestión de maestros de datos y control de almacenes (stock, pedidos y transporte).',
    features: [
      'Gestión de datos en tiempo real sobre stock, transporte y pedidos de un almacén',
      'Gestión de datos maestros de productos, clientes, envíos y almacenes',
      'Patrón repositorio para gestión de datos',
      'Sirve a múltiples sistemas de gestión de almacenes',
      'Gestión de conexiones persistentes a múltiples sistemas de bases de datos diferentes',
      'Gestión de queries SQL con QueryBuilder personalizado',
      'Integración con pipeline de mensajería (Kafka) para recibir y enviar eventos',
      'Gestión de usuarios y permisos mediante AWS Cognito',
      'Gestión de caché mediante Redis',
      'Documentación de API mediante Swagger',
      'Tests unitarios y de integración con Jest',
      'Despliegue en AWS ECS mediante Docker con GitLab CI/CD',
    ],
    technologies: [TM.NESTJS, TM.KAFKA, TM.ORACLEDB, TM.SQLSERVER, TM.AWS_COGNITO, TM.AWS_ECS, TM.JWT, TM.REDIS, TM.SWAGGER, TM.TYPESCRIPT, TM.GITLAB_CI, TM.DOCKER, TM.JEST],
  },
  {
    id: ProjectsEnum.APH_DATA_MASTERS,
    name: 'AirPharm Data Masters',
    type: 'Database',
    description: 'Base de datos SQLServer para homogeneizar maestros de datos de productos, clientes, envíos, almacenes y parametrización interna.',
    features: [
      'Gestión de datos maestros de productos, clientes, envíos, almacenes y parametrización interna',
      'Campos de auditoría para gestión de cambios',
      'Gestión de datos históricos',
      'Sirve datos a todos los sistemas de la compañía'
    ],
    technologies: [TM.SQLSERVER, TM.AWS_ECS, TM.TYPESCRIPT],
  },
  {
    id: ProjectsEnum.APH_DOCVAULT,
    name: 'AirPharm DocVault',
    type: 'API REST',
    description: 'API REST de gestión documental.',
    features: [
      'Subida y gestión de documentos en un bucket AWS S3',
      'Patrón repositorio para gestión de datos',
      'Gestión de usuarios y permisos mediante AWS Cognito',
      'Almacenamiento de metadatos de documentos en una base de datos SQLServer',
      'Documentación de API mediante Swagger',
      'Despliegue en AWS ECS mediante Docker con GitLab CI/CD',
    ],
    technologies: [TM.NESTJS, TM.AWS_S3, TM.SQLSERVER, TM.AWS_COGNITO, TM.AWS_ECS, TM.SWAGGER, TM.TYPESCRIPT, TM.GITLAB_CI, TM.DOCKER],
  },
  {
    id: ProjectsEnum.APH_SERVERLESS,
    name: 'AirPharm Serverless',
    type: 'Serverless',
    description: 'Microservicio serverless integrado con Kafka para gestión de eventos.',
    features: [
      'Gestión de eventos en tiempo real sobre recepción de correos',
      'Despliegue en AWS ECS mediante Docker con GitLab CI/CD',
    ],
    technologies: [TM.AWS_LAMBDA, TM.KAFKA, TM.TYPESCRIPT, TM.GITLAB_CI, TM.DOCKER],
  },
  {
    id: ProjectsEnum.PERSONAL_HOME_MANAGEMENT,
    name: 'Home Management',
    type: 'Web App',
    description: 'Aplicación web para gestión de tareas y gastos del hogar en React.',
    url: 'https://github.com/Asrlex/home-management',
    features: [
      'Gestión de tareas y gastos del hogar',
      'Gestión de usuarios y permisos mediante JWT',
      'Cambio de tema',
      'Estado/contexto con Zustand',
      'Animaciones con Framer Motion',
      'Estilos con CSS y TailwindCSS',
      'Despliegue en Raspberry Pi con nginx',
      'Documentación de API mediante Swagger',
      'Auth mediante JWT o biometría',
      'Control por voz mediante Web Speech API',
      'Soporte de PWA',
    ],
    technologies: [TM.REACT, TM.JWT, TM.NGINX, TM.CSS, TM.TYPESCRIPT, TM.RASPI, TM.TAILWIND, TM.FRAMER_MOTION, TM.RASPI],
    images: [
      '/hm/hm-auth.png',
      '/hm/hm-products.png',
      '/hm/hm-shopping-list.png',
      '/hm/hm-stock.png',
      '/hm/hm-stock-tags.png',
      '/hm/hm-stock-reactive-dm.png',
      '/hm/hm-stock-reactive-dm-toast.png',
      '/hm/hm-todo.png',
      '/hm/hm-todo-dm-toast.png',
      '/hm/hm-daily-tasks.png',
      '/hm/hm-recipes.png',
      '/hm/hm-recipes-dm.png',
      '/hm/hm-settings.png',
    ],
  },
  {
    id: ProjectsEnum.PERSONAL_HM_CONTROL_TOWER,
    name: 'Home Management Control Tower',
    type: 'API REST',
    description: 'API REST para gestión de tareas y gastos del hogar en NestJS.',
    url: 'https://github.com/Asrlex/control.tower-api',
    features: [
      'Gestión de tareas y gastos del hogar',
      'Patrón repositorio para gestión de datos',
      'Gestión de usuarios y permisos mediante JWT',
      'Despliegue en Raspberry Pi con nginx',
      'Gestión de caché mediante SQLite',
      'Logging con Winston',
      'Notificaciones mediante correo electrónico',
      'Documentación de API mediante Swagger',
    ],
    technologies: [TM.NESTJS, TM.JWT, TM.NGINX, TM.SWAGGER, TM.POSTGRESQL, TM.REDIS, TM.SQLITE, TM.TYPESCRIPT, TM.RASPI, TM.FRAMER_MOTION, TM.RASPI],
    images: [
      '/ct/ct-swagger.png',
      '/ct/ct-swagger-post.png',
      '/ct/ct-swagger-dto.png',
    ],
  },
  {
    id: ProjectsEnum.APH_CLIENT_PORTAL,
    name: 'AirPharm Client Portal',
    type: 'Web App',
    description: 'Portal web para clientes de AirPharm.',
    features: [
      'Gestión de usuarios y permisos mediante AWS Cognito',
      'Gestión de datos maestros de productos, clientes, envíos y almacenes',
      'Gestión de datos en tiempo real sobre stock, transporte y pedidos de un almacén',
      'Integración con servicios externos para obtención de datos',
      'Integración con entornos cloud (AWS) para despliegue y escalabilidad',
      'Integración con pipeline de mensajería (Kafka) para recibir y enviar eventos',
      'Documentación de API mediante Swagger',
      'Clean Architecture',
      'Despliegue en AWS ECS mediante Docker con GitLab CI/CD',
    ],
    technologies: [TM.DOTNET, TM.AWS_COGNITO, TM.AWS_ECS, TM.SWAGGER],
  },
  {
    id: ProjectsEnum.APH_REST_APIS,
    name: 'AirPharm REST APIs',
    type: 'Web App',
    description: 'Desarrollo de múltiples APIs REST para obtención de datos maestros (clientes, productos, pedidos y seguimiento).',
    features: [
      'Gestión de usuarios y permisos mediante AWS Cognito',
      'Gestión de datos maestros de productos, clientes, envíos y almacenes',
      'Gestión de datos en tiempo real sobre stock, transporte y pedidos de un almacén',
      'Integración con servicios externos para obtención de datos',
      'Integración con entornos cloud (AWS) para despliegue y escalabilidad',
      'Integración con pipeline de mensajería (Kafka) para recibir y enviar eventos',
      'Documentación de API mediante Swagger',
      'Clean Architecture',
      'Despliegue en AWS ECS mediante Docker con GitLab CI/CD',
    ],
    technologies: [TM.DOTNET, TM.AWS_COGNITO, TM.AWS_ECS, TM.SWAGGER],
  },
  {
    id: ProjectsEnum.PERSONAL_CV,
    name: 'CV Portfolio',
    type: 'Portfolio',
    url: '',
    description: 'CV con habilidades, proyectos y experiencia.',
    features: [
      'Gestión de habilidades y proyectos',
      'Gestión de experiencia laboral',
      'Gestión de idiomas',
      'Estado/contexto con Zustand',
      'Animaciones con Framer Motion',
      'Lazy loading de imágenes',
      'Cambio de tema',
      'Cambio de idioma',
      'Descargar CV en PDF',
      'Despliegue en Github Pages',
    ],
    technologies: [TM.REACT, TM.TYPESCRIPT, TM.CSS, TM.GITHUB_PAGES, TM.FRAMER_MOTION],
  },
  {
    id: ProjectsEnum.APH_SOAP,
    name: 'AirPharm SOAP API',
    type: 'SOAP Web service',
    description: 'Servicio web SOAP.',
    features: [
      'Servicio web SOAP para gestión de datos',
    ],
    technologies: [TM.NESTJS, TM.AWS_ECS, TM.TYPESCRIPT],
  },
  {
    id: ProjectsEnum.PERSONAL_TRAVEL_JOURNAL,
    name: 'Travel Journal',
    type: 'Web App',
    description: 'Aplicación web para gestión de viajes y fotos en React.',
    url: 'https://github.com/Asrlex/Travel-Test',
    features: [
      'Gestión de viajes y fotos',
      'Gestión de usuarios y permisos mediante JWT',
      'Gestión de imágenes mediante Cloudinary',
      'Despliegue en Vercel',
      'Geolocalización de con Mapbox',
    ],
    technologies: [TM.REACT, TM.JWT, TM.CLOUDINARY, TM.VERCEL],
    images: [
      '/travel-journal/trjournal1.png',
      '/travel-journal/trjournal2.png',
    ],
  },
  {
    id: ProjectsEnum.PERSONAL_PYTHON,
    name: 'Python Portfolio',
    type: 'Portfolio',
    description: 'Portfolio en Python para gestión de proyectos y tareas.',
    url: 'https://github.com/Asrlex/Python',
    features: [
      'Calculadora con funcionalidades básicas, avanzadas, trigonométricas y plotting',
      'Ajedrez por CLI o GUI con Kivy, con funcionalidad de guardado y cargado de partidas, logging y cronómetro',
      'Tres en raya por CLI o GUI con tkinter',
      'Conversor de texto a XML',
      'Web scraper con BeautifulSoup',
      'Integración con Sharepoint para gestión de documentos',
    ],
    technologies: [TM.PYTHON, TM.FLASK, TM.BEAUTIFUL_SOUP, TM.TKINTER, TM.KIVY, TM.PANDAS, TM.GITHUB],
    images: [
      '/python/py-calc-base.png',
      '/python/py-calc-plot.png',
      '/python/py-chess-cli.png',
      '/python/py-chess-gui.png',
      '/python/py-chess-gui-menu.png',
      '/python/py-ttt-cli.png',
      '/python/py-ttt-gui.png',
      '/python/py-web-scraper.png',
    ],
  },
];

export default portfolioDe;
